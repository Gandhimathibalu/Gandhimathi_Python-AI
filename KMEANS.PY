{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1d7747cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.cluster import KMeans\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "902c8b7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X=-2*np.random.rand(100,2)\n",
    "X1=1+2*np.random.rand(50,2)\n",
    "X[50:100,:]=X1#replacement\n",
    "plt.scatter(X[:,0],X[:,1],s=50,c=\"b\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3e1a7ddd",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\kaviy\\anaconda3\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "C:\\Users\\kaviy\\anaconda3\\lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1382: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=2)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=2)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Kmean=KMeans(n_clusters=2)\n",
    "Kmean.fit(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7c6155bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.9373023 ,  2.00552466],\n",
       "       [-0.99904797, -0.96794542]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#no of clusters\n",
    "Kmean.cluster_centers_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f2923b3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X[:,0],X[:,1],s=50,c=\"b\")\n",
    "plt.scatter(-0.93164446, -0.87183718,s=200,c=\"g\",marker=\"s\")\n",
    "plt.scatter(1.99398321,  1.94428478,s=200,c=\"r\",marker=\"s\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "480bd1de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#creation of label\n",
    "Kmean.labels_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "268e7832",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[3. 3.]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_test=np.array([3.0,3.0])\n",
    "second_test=sample_test.reshape(1,-1)\n",
    "print(second_test)\n",
    "Kmean.predict(second_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "cf7ba982",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-3.  3.]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([1])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_test=np.array([-3.0,3.0])\n",
    "second_test=sample_test.reshape(1,-1)\n",
    "print(second_test)\n",
    "Kmean.predict(second_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02021d1f",
   "metadata": {},
   "source": [
    "# HIERARCHAL CLUSTERING"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1b42e010",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "X=np.array([[5,3],\n",
    "            [10,15],\n",
    "            [15,12],\n",
    "            [24,10],\n",
    "            [30,30],\n",
    "            [85,70],\n",
    "            [71,80],\n",
    "            [60,78],\n",
    "            [70,55],\n",
    "            [80,91],])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "98514afb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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fffdF5s2bYrvfve7se+++3YeY497b82aNV3+7a5atSoiIs4888yIsLd76oYbbogf/OAHsXTp0nj66afjxhtvjO985zvx/e9/v/MYe9zPMpIWEdndd9/d+b6joyOrqKjIrr/++s61tra2LJ/PZz/4wQ8KMGH6mpqasojI6urqsiyzx/3hgx/8YPajH/3I3vah1tbWbMKECdmqVauyE088Mbv88suzLPPvd08tWLAgO/LII3f7mb3dc1deeWV2wgknvOPn9rhvXX755dn48eOzjo4Oe9sHTj311Oz888/vsnbGGWdks2fPzrLMv9+B4IzNEFNfXx+NjY0xY8aMzrXi4uI48cQT49FHHy3gZOlqbm6OiIixY8dGhD3uS+3t7XHnnXfGtm3bYsqUKfa2D82dOzdOPfXUOPnkk7us2+M999xzz0VVVVVUV1fHWWedFS+88EJE2Nu+cO+998akSZPizDPPjLKysjj66KPjlltu6fzcHvedHTt2xPLly+P888+PXC5nb/vACSecEL/61a/i2WefjYiIP/zhD/HII4/Epz/96Yjw73cgjCz0APStxsbGiIgoLy/vsl5eXh4vvvhiIUZKWpZlMX/+/DjhhBOitrY2IuxxX1i/fn1MmTIl2tra4gMf+EDcfffdUVNT0/mD3d7umTvvvDPWrl0ba9as6faZf7975rjjjovbb789PvrRj8af//zn+Pa3vx1Tp06NjRs32ts+8MILL8SyZcti/vz58bWvfS1Wr14dl112WRQXF8cXvvAFe9yH7rnnnnj11VfjvPPOiwg/G/rClVdeGc3NzXHIIYdEUVFRtLe3x3XXXRdnn312RNjjgSBshqhcLtflfZZl3dZ4b5dcckk89dRT8cgjj3T7zB733sc+9rFYt25dvPrqq/GLX/wi5syZE3V1dZ2f29ve27x5c1x++eXxwAMPRElJyTseZ497Z+bMmZ3//+GHHx5TpkyJ8ePHx2233RYf//jHI8Le7omOjo6YNGlSLFq0KCIijj766Ni4cWMsW7YsvvCFL3QeZ4/33I9//OOYOXNmVFVVdVm3t73385//PJYvXx533HFHHHbYYbFu3bqYN29eVFVVxZw5czqPs8f9x6VoQ8yuu/Ps+l8Fdmlqaur2vxDw7i699NK499574ze/+U3sv//+nev2eM/tvffe8Xd/93cxadKkWLx4cRx55JHxL//yL/a2DzzxxBPR1NQUxxxzTIwcOTJGjhwZdXV18b3vfS9GjhzZuY/2uG/ss88+cfjhh8dzzz3n328fqKysjJqami5rhx56aLz00ksR4edvX3nxxRfjwQcfjC996Uuda/Z2z33lK1+Jr371q3HWWWfF4YcfHp///Ofjy1/+cixevDgi7PFAEDZDTHV1dVRUVHTe6SRi53W0dXV1MXXq1AJOlo4sy+KSSy6Ju+66K379619HdXV1l8/tcd/Lsiy2b99ub/vASSedFOvXr49169Z1viZNmhTnnnturFu3Lg4++GB73Ie2b98eTz/9dFRWVvr32weOP/74brfXf/bZZ+PAAw+MCD9/+8qtt94aZWVlceqpp3au2ds99/rrr8eIEV3/q3VRUVHn7Z7t8QAo0E0L2AOtra3Zk08+mT355JNZRGRLlizJnnzyyezFF1/MsizLrr/++iyfz2d33XVXtn79+uzss8/OKisrs5aWlgJPnoaLLrooy+fz2UMPPZQ1NDR0vl5//fXOY+xx71111VXZww8/nNXX12dPPfVU9rWvfS0bMWJE9sADD2RZZm/7w1vvipZl9nhP/NM//VP20EMPZS+88EL22GOPZZ/5zGey0tLS7E9/+lOWZfZ2T61evTobOXJkdt1112XPPfdc9u///u/Z6NGjs+XLl3ceY4/3THt7e3bAAQdkV155ZbfP7O2emTNnTvaRj3wk+4//+I+svr4+u+uuu7IPfehD2RVXXNF5jD3uX8ImQb/5zW+yiOj2mjNnTpZlO28nuGDBgqyioiIrLi7OPvGJT2Tr168v7NAJ2d3eRkR26623dh5jj3vv/PPPzw488MBs7733zj784Q9nJ510UmfUZJm97Q9vDxt73Huf+9znssrKymyvvfbKqqqqsjPOOCPbuHFj5+f2ds+tWLEiq62tzYqLi7NDDjkku/nmm7t8bo/3zP33359FRPbMM890+8ze7pmWlpbs8ssvzw444ICspKQkO/jgg7Orr7462759e+cx9rh/5bIsywpyqggAAKCP+B0bAAAgecIGAABInrABAACSJ2wAAIDkCRsAACB5wgYAAEiesAEAAJInbAAAgOQJGwAAIHnCBgAASJ6wAQAAkvf/AaqyA6QEdkkjAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "labels=range(1,11)\n",
    "plt.figure(figsize=(10,7))\n",
    "plt.subplots_adjust(bottom=0.1)\n",
    "plt.scatter(X[:,0], X[:,1], label='True position')\n",
    "for label,x,y in zip(labels,X[:,0],X[:,1]):\n",
    "    plt.annotate(\n",
    "        label,\n",
    "        xy=(x,y),xytext=(-3,3),\n",
    "        textcoords='offset points',ha='right',va='bottom')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3fc920f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#scipy---scientific python\n",
    "from scipy.cluster.hierarchy import dendrogram,linkage\n",
    "from matplotlib import pyplot as plt\n",
    "linked=linkage(X,'single')\n",
    "labelList=range(1, 11)\n",
    "plt.figure(figsize=(10, 7))\n",
    "dendrogram(linked,\n",
    "           orientation='top',\n",
    "           labels=labelList,\n",
    "           distance_sort='descending',\n",
    "           show_leaf_counts=True)\n",
    "plt.show()\n",
    "           "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "42afb4d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#clustering model\n",
    "#PCA---principle compounent analysis\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0c82f234",
   "metadata": {},
   "outputs": [],
   "source": [
    "X=np.array([[5,3],\n",
    "            [10,15],\n",
    "            [15,12],\n",
    "            [24,10],\n",
    "            [30,30],\n",
    "            [85,70],\n",
    "            [71,80],\n",
    "            [60,78],\n",
    "            [70,55],\n",
    "            [80,91],])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2352a5cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 1, 1, 1, 1, 0, 0, 0, 0, 0], dtype=int64)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import AgglomerativeClustering\n",
    "cluster=AgglomerativeClustering(n_clusters=2,metric='euclidean',linkage='ward')\n",
    "cluster.fit_predict(X)\n",
    "#affinity--->metric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ac8e11e2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1 1 1 1 1 0 0 0 0 0]\n"
     ]
    }
   ],
   "source": [
    "print(cluster.labels_)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
